{"version":3,"sources":["auth/authic.js","account/login.js","app.js","index.js"],"names":["createAuthProvider","accessTokenKey","onUpdateToken","token","fetch","method","body","access_token","then","req","json","useAuth","authFetch","login","logout","Login","useState","username","setUsername","password","setPassword","logged","onClick","action","type","value","placeholder","name","onChange","e","target","preventDefault","detail","headers","JSON","stringify","console","log","App","title","titleCard","res","data","get","IdentityCheck","message","setMessage","useEffect","status","ReactDom","render","StrictMode","document","getElementById"],"mappings":"4JAGIA,6BAAmB,CACfC,eAAgB,eAChBC,cAAe,SAACC,GAAD,OAAWC,MAAM,2CAA4C,CACxEC,OAAQ,OACRC,KAAMH,EAAMI,eAEXC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,a,mBAPfC,E,KAASC,E,KAAWC,E,KAAOC,E,YCC1B,SAASC,IAAS,IAAD,EACEC,mBAAS,IADX,mBACvBC,EADuB,KACbC,EADa,OAEEF,mBAAS,IAFX,mBAEvBG,EAFuB,KAEbC,EAFa,OAmCbT,IAAVU,EAnCuB,oBAoC9B,OACE,8BACIA,EAsBA,wBAAQC,QAAS,kBAAKR,KAAtB,oBAtBQ,uBAAMS,OAAO,IAAb,UACR,uCACA,8BACE,uBACEC,KAAK,OACLC,MAAOR,EACPS,YAAY,WACZC,KAAK,WACLC,SA3CmB,SAACC,GAC5BX,EAAYW,EAAEC,OAAOL,YA6CjB,8BACE,uBACED,KAAK,OACLC,MAAON,EACPO,YAAY,WACZC,KAAK,WACLC,SAjDmB,SAACC,GAC5BT,EAAYS,EAAEC,OAAOL,YAmDjB,wBAAQH,QAhDQ,SAACO,GACrBA,EAAEE,iBACF,IAAIC,EAAS,CACX,SAAYf,EACZ,SAAYE,GAEdf,MAAM,+CAAgD,CACpDC,OAAQ,OACR4B,QAAS,CACP,eAAgB,mBAChB,OAAU,oBAEZ3B,KAAM4B,KAAKC,UAAUH,KAEpBxB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAL,GACAA,EAAMI,cACRM,EAAMV,GACNiC,QAAQC,IAAIlC,IAEZiC,QAAQC,IAAI,+BA4BkBb,KAAK,SAArC,wBC1DO,SAASc,IAAO,IAAD,EACCtB,mBAAS,IADV,mBACnBuB,EADmB,KACZC,EADY,KAO1B,OAJApC,MAAM,sCACDI,MAAK,SAAAiC,GAAG,OAAIA,EAAI/B,UAChBF,MAAK,SAAAkC,GAAI,OAAIF,EAAUE,EAAKC,QAG7B,gCACI,6BAAKJ,IACL,8BACI,cAACxB,EAAD,MAEJ,cAAC6B,EAAD,IACA,kDAGR,SAASA,IAAiB,IAAD,EACS5B,mBAAS,IADlB,mBACd6B,EADc,KACLC,EADK,KAkBrB,OAfAC,qBAAU,WACNnC,EAAU,kDACLJ,MAAK,SAAAiC,GACF,OAAmB,MAAfA,EAAIO,QACJF,EAAW,kCACJ,MAEJL,EAAI/B,UAEdF,MAAK,SAAAiC,GACEA,GAAOA,EAAII,SACXC,EAAWL,EAAII,cAG5B,IAEC,6BAAKA,KCnCjBI,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACb,EAAD,MAEJc,SAASC,eAAe,W","file":"static/js/main.7b07f427.chunk.js","sourcesContent":["import {createAuthProvider} from 'react-token-auth'\r\n\r\nexport const [useAuth, authFetch, login, logout] = \r\n    createAuthProvider({\r\n        accessTokenKey: 'access_token',\r\n        onUpdateToken: (token) => fetch('https://baree.herokuapp.com/user/refresh', {\r\n            method: \"POST\",\r\n            body: token.access_token\r\n        })\r\n            .then(req => req.json())\r\n    })","import React, { useState, useEffect } from 'react'\r\nimport { useAuth, login, logout } from '../auth/authic'\r\n\r\nexport default function Login() {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value)\r\n  }\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const onSubmitClick = (e) => {\r\n    e.preventDefault()\r\n    let detail = {\r\n      'username': username,\r\n      'password': password\r\n    }\r\n    fetch('https://dollardream.herokuapp.com/user/login', {\r\n      method: 'POST',\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json' \r\n      },\r\n      body: JSON.stringify(detail)\r\n    })\r\n      .then(req => req.json())\r\n      .then(token => {\r\n        if (token.access_token) {\r\n          login(token)\r\n          console.log(token)\r\n        } else {\r\n          console.log(\"Wrong USERNAME/PASSWORD\")\r\n        }\r\n      })\r\n  }\r\n\r\n  const [logged] = useAuth()\r\n  return (\r\n    <div>\r\n      {!logged? <form action='#'>\r\n        <h3>Login</h3>\r\n        <div>\r\n          <input \r\n            type=\"text\"\r\n            value={username}\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={password}\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n        <button onClick={onSubmitClick} type=\"submit\">Login</button>\r\n      </form>\r\n      : <button onClick={()=> logout()}>LogOut</button>}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { authFetch } from './auth/authic'\r\nimport Login from './account/login'\r\nexport default function App() {\r\n    const [title, titleCard] = useState('')\r\n\r\n    fetch('https://dollardream.herokuapp.com/')\r\n        .then(res => res.json())\r\n        .then(data => titleCard(data.get))\r\n\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            <div>\r\n                <Login />\r\n            </div>\r\n            <IdentityCheck />\r\n            <p>World is Peace</p>\r\n        </div>\r\n    )\r\n    function IdentityCheck() {\r\n        const [message, setMessage] = useState('')\r\n\r\n        useEffect(() => {\r\n            authFetch('https://dollardream.herokuapp.com/user/protect')\r\n                .then(res => {\r\n                    if (res.status === 422) {\r\n                        setMessage(\"Welcome Stanger, please Log in\")\r\n                        return null\r\n                    }\r\n                    return res.json()\r\n                })\r\n                .then(res => {\r\n                    if (res && res.message) {\r\n                        setMessage(res.message)\r\n                    }\r\n                })\r\n        }, [])\r\n        return(\r\n            <h5>{message}</h5>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './app';\r\n\r\nReactDom.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}