{"version":3,"sources":["auth/authic.js","app.js","index.js"],"names":["createAuthProvider","accessTokenKey","onUpdateToken","token","fetch","method","body","access_token","then","req","json","authFetch","App","useState","username","setUsername","password","setPassword","title","titleCard","res","data","get","action","type","value","placeholder","name","onChange","e","target","onClick","preventDefault","detail","headers","JSON","stringify","login","console","log","IdentityCheck","message","setMessage","useEffect","status","ReactDom","render","StrictMode","document","getElementById"],"mappings":"4JAGIA,6BAAmB,CACfC,eAAgB,eAChBC,cAAe,SAACC,GAAD,OAAWC,MAAM,qCAAsC,CAClEC,OAAQ,OACRC,KAAMH,EAAMI,eAEXC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,a,mBAPNC,G,yBCCR,SAASC,IAAO,IAAD,EACMC,mBAAS,IADf,mBACnBC,EADmB,KACTC,EADS,OAEMF,mBAAS,IAFf,mBAEnBG,EAFmB,KAETC,EAFS,OAGCJ,mBAAS,IAHV,mBAGnBK,EAHmB,KAGZC,EAHY,OAIAN,mBAAS,IAJT,6BAyC1B,OAJAT,MAAM,gCACDI,MAAK,SAAAY,GAAG,OAAIA,EAAIV,UAChBF,MAAK,SAAAa,GAAI,OAAIF,EAAUE,EAAKC,QAG7B,gCACI,6BAAKJ,IACL,gCACI,uBAAMK,OAAO,IAAb,UACI,uCACA,8BACI,uBACIC,KAAK,OACLC,MAAOX,EACPY,YAAY,WACZC,KAAK,WACLC,SA/CK,SAACC,GAC1Bd,EAAYc,EAAEC,OAAOL,YAiDT,8BACI,uBACID,KAAK,OACLC,MAAOT,EACPU,YAAY,WACZC,KAAK,WACLC,SArDK,SAACC,GAC1BZ,EAAYY,EAAEC,OAAOL,YAuDT,wBAAQM,QApDF,SAACF,GACnBA,EAAEG,iBACF,IAAIC,EAAS,CACT,SAAYnB,EACZ,SAAYE,GAEhBZ,MAAM,mCAAoC,CACtCC,OAAQ,OACR6B,QAAS,CACL,eAAgB,mBAChB,OAAU,oBAEd5B,KAAM6B,KAAKC,UAAUH,KAEpBzB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAL,GACEA,EAAMI,cACN8B,MAAMlC,GACNmC,QAAQC,IAAIpC,IAEZmC,QAAQC,IAAI,+BAgCoBf,KAAK,SAArC,sBAEJ,4BAIJ,cAACgB,EAAD,OAGR,SAASA,IAAiB,IAAD,EACS3B,mBAAS,IADlB,mBACd4B,EADc,KACLC,EADK,KAkBrB,OAfAC,WAAU,WACNhC,EAAU,sCACLH,MAAK,SAAAY,GACF,OAAmB,MAAfA,EAAIwB,QACJF,EAAW,qBACJ,MAEJtB,EAAIV,UAEdF,MAAK,SAAAY,GACEA,GAAOA,EAAIqB,SACXC,EAAWtB,EAAIqB,cAG5B,IAEC,6BAAKA,KC5FjBI,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACnC,EAAD,MAEJoC,SAASC,eAAe,W","file":"static/js/main.d1478257.chunk.js","sourcesContent":["import {createAuthProvider} from 'react-token-auth'\r\n\r\nexport const [useAuth, authFetch, login] = \r\n    createAuthProvider({\r\n        accessTokenKey: 'access_token',\r\n        onUpdateToken: (token) => fetch('http://127.0.0.1:5000/user/refresh', {\r\n            method: \"POST\",\r\n            body: token.access_token\r\n        })\r\n            .then(req => req.json())\r\n    })","import React, { useState } from 'react'\r\nimport {authFetch, useAuth} from './auth/authic'\r\n\r\nexport default function App() {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [title, titleCard] = useState('')\r\n    const [token, setToken] = useState('')\r\n\r\n    const handleUsernameChange = (e) => {\r\n        setUsername(e.target.value)\r\n    }\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onSubmitClick = (e) => {\r\n        e.preventDefault()\r\n        let detail = {\r\n            'username': username,\r\n            'password': password\r\n        }\r\n        fetch('http://127.0.0.1:5000/user/login', {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json' \r\n            },\r\n            body: JSON.stringify(detail)\r\n        })\r\n            .then(req => req.json())\r\n            .then(token => {\r\n                if (token.access_token) {\r\n                    login(token)\r\n                    console.log(token)\r\n                } else {\r\n                    console.log(\"Wrong USERNAME/PASSWORD\")\r\n                }\r\n            })\r\n    }\r\n    fetch('https://baree.herokuapp.com/')\r\n        .then(res => res.json())\r\n        .then(data => titleCard(data.get))\r\n\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            <div>\r\n                <form action='#'>\r\n                    <h3>Login</h3>\r\n                    <div>\r\n                        <input \r\n                            type=\"text\"\r\n                            value={username}\r\n                            placeholder=\"Username\"\r\n                            name=\"username\"\r\n                            onChange={handleUsernameChange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={password}\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            onChange={handlePasswordChange}\r\n                        />\r\n                    </div>\r\n                    <button onClick={onSubmitClick} type=\"submit\">Login</button>\r\n                </form>\r\n                <form>\r\n\r\n                </form>\r\n            </div>\r\n            <IdentityCheck />\r\n        </div>\r\n    )\r\n    function IdentityCheck() {\r\n        const [message, setMessage] = useState('')\r\n\r\n        useEffect(() => {\r\n            authFetch('http://127.0.0.1:5000/user/protect')\r\n                .then(res => {\r\n                    if (res.status === 442) {\r\n                        setMessage(\"You need to LogIn\")\r\n                        return null\r\n                    }\r\n                    return res.json()\r\n                })\r\n                .then(res => {\r\n                    if (res && res.message) {\r\n                        setMessage(res.message)\r\n                    }\r\n                })\r\n        }, [])\r\n        return(\r\n            <h5>{message}</h5>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './app';\r\n\r\nReactDom.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}