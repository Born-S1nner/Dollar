#Key routes and functions
import datetime
from flask_restful import Resource
from flask import request
from db_model import User
from flask_jwt_extended import create_access_token, create_refresh_token
#, get_jwt_identity, jwt_required, jwt_refresh_token_required

class Home(Resource):
    def get(self):
        get = "<h1>Hello Dollar</h1>"
        return get

class LoginUser(Resource):
    def post(self):
        body = request.get_json()
        username = body.get('username')
        password = body.get('password')
        user = User.objects.get(username=username)
        authorized = user.check_password(str(password))
        if not authorized:
            return {'Error': "Incorrect Email or Password"}, 401

        access_expires = datetime.timedelta(hours=23)
        refresh_expires = datetime.timedelta(days=3)

        access_token = create_access_token(identity=username, expires_delta=access_expires)
        refresh_token = create_refresh_token(identity=username, expires_delta=refresh_expires)
        ret = {
            "access_token": access_token,
            "refresh_token": refresh_token
        }
        return ret, 200

class NewUser(object):
    def post(self):
        body = request.get_json()
        username = body.get("username")
        if not username:
            return {'Error': "UserName Not Included"}, 405
        email = body.get("email")
        if not email:
            return {'Error': "Email Not Included"}, 406
        password = body.get("password")
        if not password:
            return {'Error': "Password Not Included"}, 407
        
        user = User(username=username, email=email, password=password)
        user.hash_password()
        user.save()
        id = user.id
        return {'id': str(id)}, 200

#Routes for Api
def initialize_routes(api):
    api.add_resource(Home, '/')
    api.add_resource(LoginUser, '/user/login')
    api.add_resource(NewUser, '/user/signup')
